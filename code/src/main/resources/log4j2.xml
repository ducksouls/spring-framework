<?xml version="1.0" encoding="UTF-8"?>
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<Configuration  name="code-log">

	<Properties>
		<!-- 格式化输出：%date表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
		<!-- %logger{36} 表示 Logger 名字最长36个字符 -->
		<property name="LOG_PATTERN" value="%date{HH:mm:ss.SSS} [%thread] %-5level [%logger{1.}:%L] - %msg%n"/>
		<property name="LOG_PATTERN2" value="%date{HH:mm:ss.SSS} [%thread] %-5level %logger{10} - %msg%n"/>
		<!-- 定义日志存储的路径 -->
		<!--		<property name="FILE_PATH" value="更换为你的日志路径" />-->
		<!--		<property name="FILE_NAME" value="更换为你的项目名" />-->
	</Properties>


	<appenders>
		<Console name="Console" target="SYSTEM_OUT">
			<ThresholdFilter level="debug"/>
			<PatternLayout pattern="${LOG_PATTERN}"/>
		</Console>
		<!--		<File name="log" fileName="e:\\test1.log" append="true">-->
		<!--			<ThresholdFilter level="error"/>-->
		<!--			<PatternLayout pattern="%d-%m%n"/>-->
		<!--		</File>-->
	</appenders>

	<!--Logger节点用来单独指定日志的形式，比如要为指定包下的class指定不同的日志级别等。-->
	<!--然后定义loggers，只有定义了logger并引入的appender，appender才会生效-->
	<loggers>
		<!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
		<logger name="org.mybatis" level="info" additivity="false">
			<AppenderRef ref="Console"/>
		</logger>
		<!--监控系统信息-->
		<!--若是additivity设为false，则 子Logger 只会在自己的appender里输出，而不会在 父Logger 的appender里输出。-->
		<Logger name="org.springframework" level="DEBUG" additivity="true">
			<AppenderRef ref="Console"/>
		</Logger>

		<root level="DEBUG">
			<appender-ref ref="Console"/>
		</root>
	</loggers>
</Configuration>
